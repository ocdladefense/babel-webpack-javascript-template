{"version":3,"file":"app.bundle.js","mappings":"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B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gCAAgC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN,uBAAuB,mBAAmB;AAC1C;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;UC1jBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA;AACkD;AACR;AACM;AAChDQ,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;AAK9B,IAAIE,OAAI,GAAGD,qDAAI,CAACE,UAAU,CAAC,MAAM,CAAC;AAClCD,OAAI,CAACE,MAAM,CAACzH,0DAAA,CAACC,+DAAO;EAACE,SAAS,EAAC,SAAM;EAACC,QAAQ,EAAC;AAAQ,CAAE,CAAC,CAAC;AAI3D,IAAMsH,OAAO,GAAGb,uDAAW,CAAC,CAAC;AAE7B,IAAMc,KAAK,GAAGC,MAAM,CAACC,WAAW,CAAC,YAAM;EAErC,IAAIC,KAAK,GAAGJ,OAAO,CAACnD,IAAI,CAAC,CAAC,CAACxD,KAAK;EAEhC,IAAG,CAAC+G,KAAK,EAAE;IACTF,MAAM,CAACG,aAAa,CAACJ,KAAK,CAAC;IAC3B;EACF;EAEAJ,OAAI,CAACS,MAAM,CAAChI,0DAAA,CAACC,+DAAO;IAACE,SAAS,EAAE2H,KAAM;IAAC1H,QAAQ,EAAC;EAAQ,CAAE,CAAC,CAAC;AAC9D,CAAC,EAAE,IAAI,CAAC,C","sources":["webpack://myapp/./src/components/Profile.jsx","webpack://myapp/./src/js/helper.js","webpack://myapp/./node_modules/@ocdla/view/cache.js","webpack://myapp/./node_modules/@ocdla/view/view.js","webpack://myapp/webpack/bootstrap","webpack://myapp/webpack/runtime/define property getters","webpack://myapp/webpack/runtime/hasOwnProperty shorthand","webpack://myapp/webpack/runtime/make namespace object","webpack://myapp/./src/js/index.js"],"sourcesContent":["import { vNode } from \"@ocdla/view\";\n\nexport default function Profile(props) {\n\n  return <h2>Hello, First Name: <span class=\"first-name\">{props.firstName}</span> Last Name: <span class=\"last-name\">{props.lastName}</span></h2>;\n}\n","import contacts from '../data/contacts.json';\n\n\nexport function* changeNames() {\n  let firsts = contacts.map(c => c.FirstName);\n  for(let i=0; i<firsts.length; i++) {\n    console.log(\"yielding\", firsts[i]);\n    yield firsts[i];\n  }\n}\n","\r\nexport { CACHE, HISTORY };\r\n\r\n\r\n\r\nconst CACHE = {};\r\n\r\nconst HISTORY = {};\r\n\r\nlet vNodeHistory = [];\r\n\r\n\r\n\r\n\r\nCACHE.set = function (key, value) {\r\n    CACHE[key] = value;\r\n}\r\n\r\nCACHE.get = function (key) {\r\n    return CACHE[key];\r\n}\r\n\r\n\r\n\r\n\r\nHISTORY.set = function (index, vNode) {\r\n    vNodeHistory[index] = vNode;\r\n}\r\n\r\nHISTORY.add = function (newVnode) {\r\n    vNodeHistory.push(newVnode);\r\n};\r\n\r\nHISTORY.clear = function () {\r\n    vNodeHistory = [];\r\n}\r\n\r\nHISTORY.getRecent = function (backwardsIndex) {\r\n    return vNodeHistory[vNodeHistory.length - (1 + backwardsIndex)];\r\n}\r\n\r\nHISTORY.getLast = function () {\r\n    return vNodeHistory[vNodeHistory.length - 1];\r\n}\r\n\r\nHISTORY.getLength = function () {\r\n    return vNodeHistory.length;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","/**\r\n * @ocdladefense/view\r\n *\r\n * @description Here is my description.\r\n *\r\n *\r\n *\r\n */\r\n\r\nexport { vNode, View, VirtualDom };\r\nimport { CACHE, HISTORY } from './cache.js';\r\n  \r\n\r\nconst VirtualDom = (function() {\r\n    return {\r\n        Fragment: \"Fragment\"\r\n    };\r\n})();\r\n\r\n\r\n/** \r\n * @class View\r\n * \r\n * This is a description of the View class.\r\n */\r\nconst View = (function() {\r\n\r\n    \r\n    const myEvents = {};\r\n\r\n    const myAfterEvents = {};\r\n    \r\n    const domEvents = {};\r\n    \r\n    const CACHE = {};\r\n\r\n    const HISTORY = {};\r\n    \r\n    let vNodeHistory = [];\r\n\r\n    let historyUserIndex = 0; //IW - to keep track of what part of the history the user is in, in case they want to go back or forward?\r\n\r\n    const NODE_CHANGED_STATES = [\"NODE_NO_COMPARISON\", \"NODE_DIFFERENT_TYPE\", \"NODE_NOT_EQUAL\", \"NODE_DIFFERENT_ELEMENT\", \"NODE_PROPS_CHANGED\", \"TEXT_NODES_NOT_EQUAL\"];\r\n    \r\n    //IW - to store stuff throughout the history so that you can access it at any point\r\n    CACHE.set = function (key, value) {\r\n        CACHE[key] = value;\r\n    }\r\n    \r\n    CACHE.get = function (key) {\r\n        return CACHE[key];\r\n    }\r\n\r\n    //IW - this one shouldnt be used because it would just replace the one at the index\r\n    HISTORY.set = function (index, vNode) {\r\n        vNodeHistory[index] = vNode;\r\n    }\r\n    \r\n    //IW - The main function for adding things to the history\r\n    HISTORY.add = function (newVnode) {\r\n        vNodeHistory.push(newVnode);\r\n    };\r\n    \r\n    //IW - if you dont want the user to be able to go back\r\n    HISTORY.clear = function () {\r\n        vNodeHistory = [];\r\n    }\r\n    \r\n    //IW - if backwardsIndex is 0 it is the most recent history (the one already rendered)\r\n    HISTORY.getRecent = function (backwardsIndex) {\r\n        return vNodeHistory[vNodeHistory.length - (1 + backwardsIndex)];\r\n    }\r\n    \r\n    //IW - the preveous function but it only returns the previous history\r\n    HISTORY.getLast = function () {\r\n        return vNodeHistory[vNodeHistory.length - 1];\r\n    }\r\n    \r\n    //IW - Im not sure the use case for this one\r\n    HISTORY.getLength = function () {\r\n        return vNodeHistory.length;\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n\r\n    \r\n    function preRenderEventHelper(selector, eventType, callback, selectorType=\"class\") {\r\n        if (domEvents[selector] == null) {\r\n            domEvents[selector] = {};\r\n        }\r\n\r\n        domEvents[selector][eventType.substring(2)] = {callback: callback, selectorType: selectorType};\r\n    }\r\n\r\n\r\n    function getEvents() {\r\n        return domEvents;\r\n    }\r\n    \r\n    \r\n    function postRenderEventHelper() {\r\n    \r\n        //IW - goes through all dom objects that have an even, then goes through each event for that object, like if it had an onclick and an onchange(, then adds it to all its children?)\r\n        for (var selector in domEvents) {\r\n            let eventsArray = domEvents[selector];\r\n            for (var eventType in eventsArray) {\r\n                let event = eventsArray[eventType];\r\n            //eventsArray.forEach(event => {\r\n                //let eventType = event.eventType;\r\n                //eventType = eventType.substring(2);\r\n                let callback = event.callback;\r\n                let selectorType = event.selectorType;\r\n                let domSelector = selectorType == \"class\" ? (\".\" + selector) : (\"#\" + selector);\r\n                let containers = document.querySelectorAll(domSelector);\r\n                for (let i = 0; i < containers.length; i++) {\r\n                    containers[i].addEventListener(eventType, callback);\r\n                }\r\n            };\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    //IW - might be left over from what view.js was before\r\n    function objectCombiner(obj1, obj2) {\r\n        let newObj = {};\r\n        for (var prop in obj1) {\r\n            newObj[prop] = obj1[prop];\r\n        }\r\n        for (var prop in obj2) {\r\n            newObj[prop] = obj2[prop];\r\n        }\r\n    \r\n        return newObj;\r\n    }\r\n    \r\n    \r\n    \r\n    /**\r\n     * @memberof View\r\n     * @method render\r\n     * @instance\r\n     * @description Perform an initial paint of a virtual node structure.\r\n     * @param {Object} vNode A virtual node structure.\r\n     */\r\n    function render(vNode) {\r\n        // let $parent = this.root;\r\n\r\n        //let renderer = createElement.bind(this);\r\n\r\n        this.currentTree = vNode;\r\n        let $newNode = createElement(vNode);\r\n\r\n        this.root.innerHTML = \"\";\r\n        this.root.appendChild($newNode);\r\n        \r\n\r\n        // $parent.replaceChild($clone, this.root);\r\n        // postRenderEventHelper(); //@jbernal\r\n\r\n        // this.root = $clone;\r\n        // this.root.addEventListener(\"click\", myAppEventHandler);\r\n        //BACKTO\r\n        // HISTORY.add($parent); //might not be the correct one to add, also might not be correct using add instead of starting new\r\n    }\r\n    \r\n    \r\n    function update(newNode) {\r\n\r\n        updateElement(this.root, newNode, this.currentTree);\r\n\r\n        this.currentTree = newNode;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @memberof View\r\n     * @method updateElement\r\n     * @instance\r\n     * @description Perform an initial paint of a virtual node structure.\r\n     * @param {DOMNode} $parent\r\n     * @param {vNode} newNode Then new virtual node tree to be rendered.\r\n     * @param {vNode} oldNode The old virtual node tree to be diffed.\r\n     * @param {Integer} index The current index of a recursive structure.\r\n     */\r\n    function updateElement($parent, newNode, oldNode, index = 0) {\r\n\r\n        let state = getChangeState(newNode, oldNode);\r\n\r\n        // Whether to use replaceChild to swap nodes.\r\n        let shouldSwapNodes = changed(state);\r\n\r\n        // Whether this current evaluation is a synthetic node.\r\n        let isSynthetic = newNode && typeof newNode.type === \"function\";\r\n\r\n        if($parent.nodeType == 3) {\r\n            return;\r\n        }\r\n        \r\n\r\n        if(!oldNode) {\r\n            let n = View.createElement(newNode);\r\n            $parent.appendChild(n);\r\n        }\r\n\r\n\r\n        else if(!newNode) {\r\n            if (!$parent.children[index]) {\r\n                $parent.removeChild($parent.children[$parent.children.length-1]);\r\n            } else {\r\n                $parent.removeChild($parent.children[index]);\r\n            }\r\n        }\r\n\r\n\r\n        else if(isSynthetic) {\r\n            if(newNode.type && newNode.type.prototype && newNode.type.prototype.render) {\r\n                let obj = new newNode.type(newNode.props);\r\n                newNode = obj.render();\r\n            } else {\r\n                newNode = typeof newNode.type === \"function\" ? newNode.type(newNode.props) : newNode;\r\n            }\r\n\r\n            if(oldNode.type && oldNode.type.prototype && oldNode.type.prototype.render) {\r\n                let obj = new oldNode.type(oldNode.props);\r\n                oldNode = obj.render();\r\n            }\r\n            \r\n            else oldNode = typeof oldNode.type === \"function\" ? oldNode.type(oldNode.props) : oldNode;\r\n            updateElement($parent, newNode, oldNode, index);\r\n        }\r\n\r\n\r\n        else if(!isSynthetic && shouldSwapNodes) {\r\n            let n = createElement(newNode);\r\n\r\n            if(newNode.type) {\r\n                $parent.replaceChild(n, $parent.childNodes[index]); \r\n            } else {\r\n                $parent.replaceChild(n, $parent.childNodes[index]);\r\n            }\r\n            \r\n        }\r\n\r\n        // Not obvious, but text nodes don't have a type and should\r\n        // have been handled before this block executes.\r\n        else if(newNode.type && newNode.children) {\r\n\r\n            const newLength = newNode.children.length;\r\n            const oldLength = oldNode.children.length;\r\n\r\n            for (let i = 0; i < newLength || i < oldLength; i++) {\r\n\r\n\r\n                let nextParent = $parent.childNodes[index];\r\n                let revisedNode = newNode.children[i];\r\n                let expiredNode = oldNode.children[i];\r\n                let equal = revisedNode == expiredNode;\r\n                if(equal) continue;\r\n\r\n                updateElement(\r\n                    nextParent,\r\n                    revisedNode,\r\n                    expiredNode,\r\n                    i\r\n                );\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n\r\n\r\n    function getChangeState(n1, n2) {\r\n\r\n        if(n1 && !n2) return \"NODE_NO_COMPARISON\";\r\n\r\n        if(n1 == n2) return \"NODE_NO_CHANGE\";\r\n\r\n        // Comparing two text nodes that are obviously different.\r\n        if(typeof n1 === \"string\" && typeof n2 === \"string\" && n1 !== n2) {\r\n            return \"TEXT_NODES_NOT_EQUAL\";\r\n        }\r\n\r\n        if(typeof n1 !== typeof n2) {\r\n            return \"NODE_DIFFERENT_TYPE\";\r\n        }\r\n        \r\n        if(n1.type !== n2.type) {\r\n            return \"NODE_DIFFERENT_ELEMENT\";\r\n        }\r\n\r\n        if(propsChanged(n1, n2)) {\r\n            return \"NODE_PROPS_CHANGED\";\r\n        }\r\n\r\n        if(n1 != n2) {\r\n            return \"NODE_RECURSIVE_EVALUATE\";\r\n        }\r\n        \r\n        return \"NODE_NO_CHANGE\";\r\n    }\r\n\r\n\r\n    function changed(state) {\r\n\r\n        return NODE_CHANGED_STATES.includes(state);\r\n    }\r\n\r\n    function propsChanged(node1, node2) {\r\n\r\n        let node1Props = node1.props;\r\n        let node2Props = node2.props;\r\n    \r\n        if (typeof node1Props != typeof node2Props) {\r\n            return true;\r\n        }\r\n    \r\n        if (!node1Props && !node2Props) {\r\n            return false;\r\n        }\r\n    \r\n        let aProps = Object.getOwnPropertyNames(node1Props);\r\n        let bProps = Object.getOwnPropertyNames(node2Props);\r\n    \r\n        \r\n        if (aProps.length != bProps.length) {\r\n            return true;\r\n        }\r\n    \r\n        for (let i = 0; i < aProps.length; i++) {\r\n            let propName = aProps[i];\r\n    \r\n            if (node1Props[propName] !== node2Props[propName]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    \r\n    //IW - not used?\r\n    function props(props){\r\n        var p = {};\r\n        for(var i = 0; i<props.length; i++){\r\n            var attr = props.item(i);\r\n            p[\"class\" == attr.nodeName ? \"className\" : attr.nodeName] = attr.nodeValue;\r\n            // console.log(props.item(i));\r\n        }\r\n        \r\n        return p;\r\n    }\r\n    \r\n\r\n    \r\n    \r\n    // Main event handler for any view application.\r\n    function myAppEventHandler(e) {\r\n        //console.log(e);\r\n        e.preventDefault(); //added to prevent a link from taking you somewhere\r\n    \r\n        let target, actions, action, virtualNodes, currentVnodeState, details;\r\n    \r\n    \r\n        target = e.target;\r\n        actions = getDefinedActions();\r\n        details = e.frameworkDetail;\r\n    \r\n    \r\n        action = details.action;\r\n    \r\n        if (!actions.includes(action)) {\r\n            return false;\r\n        }\r\n        \r\n        currentVnodeState = HISTORY.getRecent(0); //BACKTO\r\n    \r\n        virtualNodes = myEvents[action](details);\r\n        \r\n        if (virtualNodes) {\r\n            try {\r\n                //to remove error if a nonpromise is returned because you just want to detect if something is clicked without rendering anything\r\n                //could maybe make it so other related errors dont pop up in debugger?\r\n                return virtualNodes.then(function(vNodes) {\r\n                    HISTORY.add(vNodes);\r\n                    updateElement(root, vNodes, currentVnodeState);\r\n                    myAfterEvents[action]();\r\n                });\r\n            }\r\n            catch {\r\n                //console.log(\"non promise event was called\");\r\n                return false;\r\n            }\r\n        }\r\n    \r\n    \r\n    \r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    function getDefinedActions() {\r\n        return Object.getOwnPropertyNames(myEvents);\r\n    }\r\n    \r\n    function addEvent(key, result, afterRenderEvent = function() {}) {\r\n        //console.log(this.root); //using the root here might not work if it gets changed\r\n        //this.root.addEventListener(\"click\", myAppEventHandler);\r\n\r\n        myEvents[key] = result;\r\n        myAfterEvents[key] = afterRenderEvent;\r\n    }\r\n\r\n    \r\n\r\n    /**\r\n     * @constructs View\r\n     * @param root\r\n     */\r\n    function View(root) {\r\n        this.root = root;\r\n        //document.getElementById(\"order-history-main\").addEventListener(\"click\", myAppEventHandler);\r\n        //root.addEventListener(\"click\", myAppEventHandler);\r\n    }\r\n\r\n    View.prototype = {\r\n        render: render,\r\n        update: update,\r\n        addEvent: addEvent,\r\n        preRenderEventHelper: preRenderEventHelper,\r\n        createElement: createElement,\r\n        getEvents, getEvents\r\n    };\r\n    \r\n\r\n    return View;\r\n})();\r\n\r\n\r\n\r\n/**\r\n * Return a View instance from the given DOM element or selector.\r\n * \r\n * @param {string} selector \r\n * @returns {View}\r\n */\r\nView.createRoot = function(selector) {\r\n    let elem = typeof selector == \"string\" ? document.querySelector(selector) : selector;\r\n    let root = elem.cloneNode(false);\r\n    elem.parentElement.replaceChild(root, elem);\r\n    \r\n    return new View(root);\r\n};\r\n    \r\n\r\n\r\n/**\r\n * @memberof View\r\n * @method createElement\r\n * @description Recursively transform a virtual node structure into a DOM node tree.\r\n * @param {Object} vnode A virtual node structure.\r\n * @returns DOMElement\r\n */\r\nfunction createElement(vnode) {\r\n    \r\n    if(typeof vnode === \"string\" || typeof vnode === \"number\") {\r\n        return document.createTextNode(vnode.toString());\r\n    }\r\n    if(vnode.type == \"text\") {\r\n        return document.createTextNode(vnode.children);\r\n    }\r\n    //first check to see if component references a class name\r\n    if(typeof vnode.type == \"function\" && vnode.type.prototype && vnode.type.prototype.render) {\r\n        console.log(\"vNode is a class reference\");\r\n        let obj = new vnode.type(vnode.props);\r\n        let render = obj.render();\r\n        let node = createElement(render);\r\n        //BACKTO\r\n        // Let the component know about its own root.\r\n        // obj.setRoot(node);\r\n        return node;\r\n    }\r\n    if(typeof vnode.type == \"function\") {\r\n        let fn = vnode.type(vnode.props);\r\n        return createElement(fn);\r\n    }\r\n\r\n    var $el = vnode.type == \"Fragment\" ? document.createDocumentFragment() : document.createElement(vnode.type);\r\n    var theClassNames;\r\n    var theEventKey;\r\n\r\n    if (vnode.props) {\r\n        //var html5 = \"className\" == prop ? \"class\" : prop;\r\n        theClassNames = vnode.props[\"class\"];\r\n        if (theClassNames) {\r\n            theClassNames = theClassNames.split(\" \"); //hack, get better way of obtaining names, this one only gets the first\r\n            // theEventKey = theClassNames[0]; \r\n        }\r\n    }\r\n    \r\n    //BACKTO\r\n    for(var prop in vnode.props) {\r\n        var html5 = \"className\" == prop ? \"class\" : prop;\r\n        if(\"children\" == prop) continue;\r\n        if (prop.indexOf(\"on\") === 0) {\r\n            // this.preRenderEventHelper(theEventKey, prop, vnode.props[prop]);\r\n            $el.addEventListener(prop.substring(2), vnode.props[prop]);\r\n            continue;\r\n        }\r\n        else if (vnode.props[prop] === null) {\r\n            continue;\r\n        }\r\n        else {\r\n            $el.setAttribute(html5,vnode.props[prop]);\r\n        }\r\n    }\r\n    \r\n    if(null != vnode.children) {\r\n        vnode.children.map(createElement)\r\n            .forEach($el.appendChild.bind($el));\r\n    }\r\n    \r\n    return $el;\r\n};\r\n\r\nView.createElement = createElement;\r\n\r\n/** \r\n * JSX parsing function.\r\n */\r\nfunction vNode(name,attributes,...children) {\r\n    attributes = attributes || {};\r\n    let joined = [];\r\n    if(children.length == 0 || null == children[0] || typeof children[0] == \"undefined\") {\r\n        joined = [];\r\n    } else if(children.length == 1 && typeof children[0] == \"string\") {\r\n        joined = children;\r\n    } else {\r\n        for(var i = 0; i<children.length; i++) {\r\n            if(Array.isArray(children[i])) {\r\n                joined = joined.concat(children[i]);\r\n            } else {\r\n                joined.push(children[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    attributes.children = joined;\r\n            \r\n    var vnode =  {    \r\n        type: name,\r\n        props: attributes,\r\n        children: joined\r\n    };\r\n    \r\n    return vnode;\r\n}\r\n\r\n\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/** @jsx vNode */\nimport { vNode, View } from \"@ocdla/view/view.js\";\nimport { changeNames } from \"./helper.js\";\nimport Profile from \"../components/Profile.jsx\";\nconsole.log(\"Loaded index.js\"); \n\n\n\n\nlet root = View.createRoot(\"#app\");\nroot.render(<Profile firstName=\"José\" lastName=\"Bernal\" />);\n\n\n\nconst changer = changeNames();\n\nconst intId = window.setInterval(() => {\n  \n  let first = changer.next().value;\n\n  if(!first) {\n    window.clearInterval(intId);\n    return;\n  }\n\n  root.update(<Profile firstName={first} lastName=\"Bernal\" />);\n}, 1000);\n"],"names":["vNode","Profile","props","firstName","lastName","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","_marked","changeNames","contacts","firsts","changeNames$","_context","map","FirstName","console","log","View","root","createRoot","render","changer","intId","window","setInterval","first","clearInterval","update"],"sourceRoot":""}